<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Register – MD Technical School</title>
  <link rel="icon" href="<%= branding.favicon %>">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">

  <style>
    :root{
      --primary-color: dodgerblue;
      --secondary-color: orange;
      --muted: #6c757d;
      --surface: #ffffff;
      --border: #e5e7eb;
      --bg: #f4f6f9;
    }

    body{ background: var(--bg); font-family: "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif; }

    .portal-wrap{
      max-width: 1100px;
      margin: 48px auto;
      padding: 0 16px;
    }

    .portal-card{
      background: var(--surface);
      border: 1px solid var(--border);
      border-radius: 12px;
      overflow: hidden;
      box-shadow: 0 0.75rem 1.25rem rgba(0,0,0,.06);
    }

    .portal-header{
      background: var(--primary-color);
      color: #fff;
      padding: 2rem 1.5rem;
      display: flex;
      align-items: center;
      gap: 16px;
    }
    .portal-header .brand{
      display: flex; align-items: center; gap: 14px;
    }
    .portal-header img{
      height: 64px; width: 64px; object-fit: contain; background: #fff; border-radius: 12px; padding: 6px;
    }
    .portal-header h1{
      font-size: 1.5rem; font-weight: 700; letter-spacing:.3px; margin:0;
    }
    .portal-header p{ margin:0; opacity:.9; }

    .portal-body{ padding: 1.5rem; }
    .section-title{
      display:flex; align-items:center; gap:10px; margin: 1.5rem 0 .75rem;
      font-weight: 700; color:#111827; font-size:1.05rem;
    }
    .section-title::before{
      content:""; display:inline-block; width:6px; height:20px; border-radius:3px; background: var(--secondary-color);
    }

    .docbox { max-height: 220px; overflow: auto; background:#fff; }
    .sig { border:1px solid #ced4da; width:100%; height:160px; touch-action:none; background:#fff; border-radius:8px; }

    /* Inputs / buttons */
    .btn-primary{ background: var(--primary-color) !important; border-color: var(--primary-color) !important; }
    .btn-primary:hover{ background: #1e6edb !important; border-color:#1e6edb !important; }
    .btn-link{ color: var(--primary-color) !important; }
    .btn-link:hover{ color: var(--secondary-color) !important; }

    .form-label .req{ color:#dc3545; margin-left:4px; }

    .cardish{
      background:#fff; border:1px solid var(--border); border-radius:10px; padding:1rem;
    }

    .error-text { color: #dc3545; font-size: .9em; }
    .is-invalid { border-color: #dc3545 !important; }

    /* Compact help text tone */
    .text-muted{ color: var(--muted) !important; }
  </style>
</head>
<body>
  <div class="portal-wrap">
    <div class="portal-card">
      <div class="portal-header">
        <div class="brand">
          <img src="<%= branding.primaryLogo %>" alt="Logo">
          <div>
            <h1>Student Registration Application</h1>
            <p>Welcome to <strong>MD Technical School</strong> — please complete the steps below.</p>
          </div>
        </div>
      </div>

      <div class="portal-body">
        <% if (error) { %>
          <div class="alert alert-danger mb-4"><%= error %></div>
        <% } %>

             <form method="post" action="/register" onsubmit="return captureAll()">
          <!-- Personal Information -->
          <div class="section-title">Personal Information</div>
          <div class="row g-3">
            <div class="col-md-4">
              <label class="form-label">First Name<span class="req">*</span></label>
              <input name="firstName" class="form-control" required value="<%= formData?.firstName || '' %>">
            </div>
            <div class="col-md-4">
              <label class="form-label">Last Name<span class="req">*</span></label>
              <input name="lastName" class="form-control" required value="<%= formData?.lastName || '' %>">
            </div>
            <div class="col-md-4">
              <label class="form-label">Suffix (optional)</label>
              <input name="suffix" class="form-control" placeholder="Jr., Sr., III" value="<%= formData?.suffix || '' %>">
            </div>
            <div class="col-md-6">
              <label class="form-label">Address<span class="req">*</span></label>
              <input name="address" class="form-control" required value="<%= formData?.address || '' %>">
            </div>
            <div class="col-md-3">
              <label class="form-label">City<span class="req">*</span></label>
              <input name="city" class="form-control" required value="<%= formData?.city || '' %>">
            </div>
            <div class="col-md-3">
              <label class="form-label">State<span class="req">*</span></label>
              <select name="state" class="form-select" required>
                <option value="">Select…</option>
                <% ['VA','MD','DC','NC','PA','NY','CA','TX','FL','Other'].forEach(st => { %>
                  <option value="<%= st %>" <%= formData?.state === st ? 'selected' : '' %>><%= st %></option>
                <% }) %>
              </select>
            </div>
            <div class="col-md-3">
              <label class="form-label">ZIP Code<span class="req">*</span></label>
              <input name="zip" class="form-control" required value="<%= formData?.zip || '' %>">
            </div>
          </div>

          <hr class="my-4">

          <!-- Account -->
          <div class="section-title">Account</div>
          <div class="row g-3">
            <div class="col-md-4">
              <label class="form-label">Username<span class="req">*</span></label>
              <input name="username" class="form-control" required value="<%= formData?.username || '' %>">
            </div>
            <div class="col-md-4">
              <label class="form-label">Email<span class="req">*</span></label>
              <input type="email" name="email" class="form-control" required value="<%= formData?.email || '' %>">
            </div>
            <div class="col-md-4">
              <label class="form-label">Confirm Email<span class="req">*</span></label>
              <input type="email" name="confirmEmail" class="form-control" required value="<%= formData?.confirmEmail || '' %>">
            </div>

            <div class="col-md-4">
              <label class="form-label">Password<span class="req">*</span></label>
              <input type="password" name="password" id="password" class="form-control" required minlength="8" autocomplete="new-password" placeholder="At least 8 characters">
              <div class="error-text d-none" id="passwordErr">Password must be at least 8 characters.</div>
            </div>
            <div class="col-md-4">
              <label class="form-label">Confirm Password<span class="req">*</span></label>
              <input type="password" name="confirmPassword" id="confirmPassword" class="form-control" required minlength="8" autocomplete="new-password" placeholder="Re-enter password">
              <div class="error-text d-none" id="confirmPasswordErr">Passwords do not match.</div>
            </div>

            <div class="col-md-4">
              <label class="form-label">Student ID<span class="req">*</span></label>
  <input name="studentId" class="form-control bg-light" required readonly value="<%= formData?.studentId || '' %>">            </div>
          </div>

          <div class="form-check mt-3">
            <input class="form-check-input" type="checkbox" id="financialAid" name="financialAid" value="yes" <%= formData?.financialAid ? 'checked' : '' %>>
            <label class="form-check-label" for="financialAid">I am applying for financial aid</label>
          </div>

          <hr class="my-4">

          <!-- Program Details -->
          <div class="section-title">Program Details</div>
          <div class="row g-3">
            <div class="col-md-6">
              <label class="form-label">Course<span class="req">*</span></label>
              <select class="form-select" name="course" required>
                <option value="">Select a course…</option>
                <% (courses || []).forEach(function(c){ %>
                  <option value="<%= c %>" <%= formData?.course === c ? 'selected' : '' %>><%= c %></option>
                <% }) %>
              </select>
            </div>
            <div class="col-md-6">
              <label class="form-label">Affiliated Program<span class="req">*</span></label>
              <select class="form-select" name="affiliateProgram" required>
                <option value="">Select…</option>
                <% (affiliatePrograms || []).forEach(function(p){ %>
                  <option value="<%= p %>" <%= formData?.affiliateProgram === p ? 'selected' : '' %>><%= p %></option>
                <% }) %>
              </select>
            </div>
            
          </div>

         <hr class="my-4">
          <!-- Referral (optional) -->
          <div class="section-title">Referral <span class="text-muted">(optional)</span></div>
          <p class="text-muted small">When you refer someone to our school you may be eligible for a monetary reimbursement.</p>
          <div class="row g-3">
            <div class="col-md-6">
              <label class="form-label">Referrer's Full Name</label>
              <input name="referralName" class="form-control" value="<%= formData?.referralName || '' %>">
            </div>
            <div class="col-md-6">
              <label class="form-label">Referrer's Email</label>
              <input type="email" name="referralEmail" class="form-control" value="<%= formData?.referralEmail || '' %>">
            </div>
          </div>
<hr class="my-4">
  <div class="section-title">Personal Information </div>
               <div class="row g-3 mt-1">
                <div class="col-md-4">
                  <label class="form-label">Home Phone</label>
                  <input name="phoneHome" class="form-control" value="<%= formData?.phoneHome || '' %>">
                </div>
                <div class="col-md-4">
                  <label class="form-label">Cell Phone</label>
                  <input name="phoneCell" class="form-control" value="<%= formData?.phoneCell || '' %>">
                </div>
                <div class="col-md-4">
                  <label class="form-label">Work Phone</label>
                  <input name="phoneWork" class="form-control" value="<%= formData?.phoneWork || '' %>">
                </div>
             
          

          <div class="mt-4 d-flex gap-2">
            <button class="btn btn-primary">Submit Registration</button>
            <a href="/login" class="btn btn-link">Back to login</a>
          </div>

          </div> <!-- end step2 -->
        </form>
      </div>
    </div>
  </div>

  <!-- ===== SCRIPTS (unchanged core behaviors, cleaned up) ===== -->
  <script>

    // Inline error helpers
    function showError(selectorOrEl, msg){
      const el = typeof selectorOrEl === 'string' ? document.querySelector(selectorOrEl) : selectorOrEl;
      if (!el) return;
      const next = el.nextElementSibling;
      if (next?.classList?.contains('error-text')) next.remove();
      el.classList.add('is-invalid');
      const err = document.createElement('div');
      err.className = 'error-text';
      err.textContent = msg;
      el.parentNode.appendChild(err);
      el.scrollIntoView({behavior:'smooth', block:'center'});
    }

    function captureAll(){
      // clear old errors
      document.querySelectorAll('.error-text').forEach(el => el.remove());
      document.querySelectorAll('.is-invalid').forEach(el => el.classList.remove('is-invalid'));

      // email match
      const email = document.querySelector('input[name="email"]');
      const confirmEmail = document.querySelector('input[name="confirmEmail"]');
      if (email.value.trim() !== confirmEmail.value.trim()) {
        showError(confirmEmail, 'Emails do not match.');
        return false;
      }

      // password checks
      const pw = document.getElementById('password');
      const pw2 = document.getElementById('confirmPassword');
      if ((pw.value || '').length < 8) { showError(pw, 'Password must be at least 8 characters.'); return false; }
      if (pw.value !== pw2.value) { showError(pw2, 'Passwords do not match.'); return false; }

      // never persist passwords
      localStorage.removeItem('reg_password');
      localStorage.removeItem('reg_confirmPassword');

      return true;
    }

    // field persistence (no passwords/files)
    function shouldPersist(el){ return !!el.name && el.type!=='file' && el.type!=='password'; }

    document.addEventListener('input', e => {
      const el = e.target;
      if (!shouldPersist(el)) return;
      localStorage.setItem('reg_' + el.name, el.type === 'checkbox' ? el.checked : el.value);
    });

    document.addEventListener('DOMContentLoaded', () => {
      document.querySelectorAll('input, select, textarea').forEach(el => {
        if (!shouldPersist(el)) return;
        const saved = localStorage.getItem('reg_' + el.name);
        if (saved !== null) el.type === 'checkbox' ? (el.checked = saved === 'true') : (el.value = saved);
      });

        const step1 = document.getElementById('step1');
      const step2 = document.getElementById('step2');
      const toStep2 = document.getElementById('toStep2');
      const backTo1 = document.getElementById('backTo1');
      if (step1 && step2 && toStep2 && backTo1) {
        toStep2.addEventListener('click', () => {
          step1.classList.add('d-none');
          step2.classList.remove('d-none');
          window.scrollTo(0,0);
        });
        backTo1.addEventListener('click', () => {
          step2.classList.add('d-none');
          step1.classList.remove('d-none');
          window.scrollTo(0,0);
        });
      }

      const ssnInput = document.getElementById('ssn');
      const toggleBtn = document.getElementById('toggleSsn');

      if (ssnInput && toggleBtn) {
        toggleBtn.addEventListener('click', () => {
          if (ssnInput.type === 'password') {
            ssnInput.type = 'text';
            toggleBtn.textContent = 'Hide';
          } else {
            ssnInput.type = 'password';
            toggleBtn.textContent = 'Show';
          }
        });
      }

      // Live validation for password UX
      const pw = document.getElementById('password');
      const pw2 = document.getElementById('confirmPassword');
      const pwErr = document.getElementById('passwordErr');
      const pw2Err = document.getElementById('confirmPasswordErr');
      if (pw && pw2){
        const checkLen = () => { (pw.value && pw.value.length < 8) ? (pw.classList.add('is-invalid'), pwErr.classList.remove('d-none')) : (pw.classList.remove('is-invalid'), pwErr.classList.add('d-none')); };
        const checkMatch = () => { (pw2.value && pw.value !== pw2.value) ? (pw2.classList.add('is-invalid'), pw2Err.classList.remove('d-none')) : (pw2.classList.remove('is-invalid'), pw2Err.classList.add('d-none')); };
        pw.addEventListener('input', () => { checkLen(); checkMatch(); });
        pw2.addEventListener('input', checkMatch);
      }
    });
  </script>
</body>
</html>