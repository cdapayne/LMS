<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <title>Events Dashboard – MD Technical School</title>
  <link rel="icon" href="<%= branding?.favicon %>">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" />

  <style>
    :root{
      --primary-color: dodgerblue;
      --secondary-color: orange;
      --bg: #f4f6f9;
      --surface: #ffffff;
      --border: #e5e7eb;
      --muted: #6b7280;
    }
    body{ background: var(--bg); font-family: "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif; }

    /* Page head */
    .page-head{
      background: linear-gradient(180deg, rgba(30,144,255,.10), rgba(255,165,0,.06));
      border-bottom: 1px solid var(--border);
      padding: 1rem 0; margin-bottom: 1rem;
    }
    .page-head h2{ margin:0; font-weight:800; font-size:1.35rem; }
    .muted{ color: var(--muted); }
    .pill{
      display:inline-block; background:#fff; border:1px solid var(--border);
      border-radius:999px; padding:.35rem .7rem; font-weight:600;
      box-shadow: 0 .3rem .8rem rgba(0,0,0,.04);
    }

    /* Card + table */
    .cardish{
      background: var(--surface);
      border:1px solid var(--border);
      border-radius:12px;
      box-shadow: 0 .6rem 1.2rem rgba(0,0,0,.05);
      padding:1rem;
    }
    .section-title{
      display:flex; align-items:center; gap:10px; font-weight:700; margin-bottom:.75rem;
    }
    .section-title::before{ content:""; width:6px; height:18px; border-radius:3px; background: var(--secondary-color); }
    .table-wrap{ overflow:auto; max-height: 70vh; border:1px solid var(--border); border-radius:10px; }
    .table thead th{ background:#f8fafc; font-weight:600; position:sticky; top:0; z-index:1; }
    .table-bordered{ border-color: var(--border) !important; }
    .table-bordered > :not(caption) > * { border-color: var(--border) !important; }

    /* Buttons */
    .btn-primary{ background: var(--primary-color) !important; border-color: var(--primary-color) !important; }
    .btn-primary:hover{ background:#1e6edb !important; border-color:#1e6edb !important; }
    .btn-outline-primary{ color: var(--primary-color) !important; border-color: var(--primary-color) !important; }
    .btn-outline-primary:hover{ background: var(--primary-color) !important; color:#fff !important; }

    /* Type badges */
    .badge-type{ border:1px solid var(--border); background:#fff; }
    .type-class{ color:#1e40af; border-color:#bfdbfe; background:#eff6ff; }
    .type-test{ color:#9a3412; border-color:#fed7aa; background:#fff7ed; }
    .type-other{ color:#065f46; border-color:#bbf7d0; background:#ecfdf5; }

    .tools-bar{ gap:.5rem; }
  </style>
</head>
<body>
  <%- include('header', { user: user }) %>

  <!-- Page Head -->
  <div class="page-head">
    <div class="container d-flex flex-wrap justify-content-between align-items-end gap-2">
      <div>
        <h2>Upcoming Events (next 3 weeks)</h2>
        <div class="mt-2 muted">
          <span class="pill">Total: <%= events.length %></span>
          <span class="pill">Class sessions: <%= classCount %></span>
          <span class="pill">Test due dates: <%= testCount %></span>
        </div>
      </div>
      <% if (events.length) { %>
      <div class="tools-bar d-flex">
        <input id="searchInput" class="form-control" placeholder="Search title/class…" />
        <select id="typeFilter" class="form-select">
          <option value="">All types</option>
          <option value="class">Class session</option>
          <option value="test">Test due</option>
        </select>
        <button id="clearFilters" class="btn btn-outline-secondary">Clear</button>
        <button id="exportCsv" class="btn btn-primary">Export CSV</button>
      </div>
      <% } %>
    </div>
  </div>

  <div class="container pb-4">
    <div class="cardish">
      <div class="section-title">Calendar Feed</div>

      <div class="table-wrap">
        <table id="eventsTable" class="table table-bordered table-hover align-middle mb-0">
          <thead>
            <tr>
              <th style="min-width:120px;">Date</th>
              <th style="min-width:100px;">Time</th>
              <th style="min-width:260px;">Event</th>
              <th style="min-width:220px;">Class</th>
              <th style="min-width:120px;">Type</th>
            </tr>
          </thead>
          <tbody>
            <% if (events.length === 0) { %>
              <tr><td colspan="5" class="text-center text-muted">No upcoming events</td></tr>
            <% } %>
            <% events.forEach(e => { %>
              <% const typeKey = (e.type || '').toLowerCase().includes('test') ? 'test'
                             : (e.type || '').toLowerCase().includes('class') ? 'class'
                             : 'other'; %>
              <tr data-type="<%= typeKey %>">
                <td><%= e.date %></td>
                <td><%= e.time %></td>
                <td><%= e.title %></td>
                <td><%= e.className %></td>
                <td>
                  <span class="badge badge-type <%= typeKey === 'class' ? 'type-class' : (typeKey === 'test' ? 'type-test' : 'type-other') %>">
                    <%= e.type %>
                  </span>
                </td>
              </tr>
            <% }) %>
          </tbody>
        </table>
      </div>

      <div class="d-flex justify-content-between align-items-center mt-3">
        <div class="muted small">Showing <span id="rowCount"><%= events.length %></span> events</div>
        <a href="javascript:history.back()" class="btn btn-link">Back</a>
      </div>
    </div>
  </div>

  <% if (events.length) { %>
  <script>
    (function(){
      const table = document.getElementById('eventsTable');
      const search = document.getElementById('searchInput');
      const typeSel = document.getElementById('typeFilter');
      const clearBtn = document.getElementById('clearFilters');
      const countEl = document.getElementById('rowCount');
      const exportBtn = document.getElementById('exportCsv');

      function norm(s){ return (s||'').toString().toLowerCase(); }

      function filter(){
        const q = norm(search.value);
        const t = norm(typeSel.value); // "", "class", "test"
        let shown = 0;
        Array.from(table.tBodies[0].rows).forEach(tr => {
          const type = tr.getAttribute('data-type') || '';
          const title = norm(tr.cells[2]?.innerText);
          const cls   = norm(tr.cells[3]?.innerText);
          const matchesType = !t || type === t;
          const matchesSearch = !q || title.includes(q) || cls.includes(q);
          const vis = matchesType && matchesSearch;
          tr.style.display = vis ? '' : 'none';
          if (vis) shown++;
        });
        countEl.textContent = shown;
      }

      function toCsv(){
        const rows = [];
        const visibleRows = Array.from(table.querySelectorAll('tr'))
          .filter(tr => tr.closest('tbody') ? tr.style.display !== 'none' : true);

        visibleRows.forEach(tr => {
          const cells = Array.from(tr.cells).map(td => {
            const t = td.innerText.replace(/\r?\n+/g,' ').trim();
            return /[",]/.test(t) ? '"' + t.replace(/"/g,'""') + '"' : t;
          });
          rows.push(cells.join(','));
        });

        const blob = new Blob([rows.join('\n')], {type:'text/csv;charset=utf-8;'});
        const url = URL.createObjectURL(blob);
        const a = document.createElement('a');
        a.href = url; a.download = 'events_next_3_weeks.csv'; a.click();
        URL.revokeObjectURL(url);
      }

      search?.addEventListener('input', filter);
      typeSel?.addEventListener('change', filter);
      clearBtn?.addEventListener('click', () => { search.value=''; typeSel.value=''; filter(); });
      exportBtn?.addEventListener('click', toCsv);
    })();
  </script>
  <% } %>
</body>
</html>
