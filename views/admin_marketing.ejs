<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <title>Marketing – Admin | MD Technical School</title>
  <link rel="icon" href="<%= branding?.favicon %>">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
  <style>
    :root{
      --primary-color: dodgerblue;
      --secondary-color: orange;
      --bg: #f4f6f9;
      --surface: #ffffff;
      --border: #e5e7eb;
      --muted: #6b7280;
    }
    body{ background: var(--bg); font-family: "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif; }
    .cardish{
      background: var(--surface);
      border:1px solid var(--border);
      border-radius:12px;
      box-shadow: 0 .6rem 1.2rem rgba(0,0,0,.05);
      padding:1rem;
    }
    .btn-primary{ background: var(--primary-color) !important; border-color: var(--primary-color) !important; }
    .btn-primary:hover{ background:#1e6edb !important; border-color:#1e6edb !important; }
    .pill{ display:inline-block; padding:.15rem .5rem; border-radius:999px; font-weight:600; font-size:.8rem; margin-right:.25rem; }
    .pill-red{ color:#842029; background:#f8d7da; border:1px solid #f5c2c7; }
    .pill-yellow{ color:#664d03; background:#fff3cd; border:1px solid #ffe69c; }
    .pill-blue{ color:#084298; background:#cfe2ff; border:1px solid #b6d4fe; }
  </style>
</head>
<body>
  <%- include('header', { user: user }) %>
  <div class="container mt-4">
    <h2>Marketing Email</h2>
    <div class="small mb-2">
      Legend:
      <span class="pill pill-blue">Contacted &lt; 2 weeks</span>
      <span class="pill pill-yellow">Contacted ≥ 2 weeks</span>
      <span class="pill pill-red">Never contacted</span>
    </div>
    <% if (sent) { %>
      <div class="alert alert-success">Email sent successfully.</div>
    <% } %>
    <% if (error) { %>
      <div class="alert alert-danger"><%= error %></div>
    <% } %>
    <div class="cardish mt-3">
      <form id="marketingForm" method="post" action="/admin/marketing" enctype="multipart/form-data">
          <div class="mb-3">
            <label class="form-label">Recipients</label>
            <div class="row g-2 mb-2">
              <div class="col-md-3">
                <input type="text" id="searchRecipients" class="form-control" placeholder="Search">
              </div>
              <div class="col-md-3">
                <select id="filterType" class="form-select">
                  <option value="">All Types</option>
                  <option value="student">Student</option>
                  <option value="pre">Pre-registered</option>
                  <option value="rsvp">RSVP</option>
                </select>
              </div>
              <div class="col-md-3">
                <select id="filterCourse" class="form-select">
                  <option value="">All Courses</option>
                  <% courses.forEach(c => { %>
                    <option value="<%= c %>"><%= c %></option>
                  <% }); %>
                </select>
              </div>
              <div class="col-md-3">
                <select id="filterProgram" class="form-select">
                  <option value="">All Programs</option>
                  <% programs.forEach(p => { %>
                    <option value="<%= p %>"><%= p %></option>
                  <% }); %>
                </select>
              </div>
              <div class="col-md-3">
                <input type="date" id="filterLastFrom" class="form-control" placeholder="Last contacted from">
              </div>
              <div class="col-md-3">
                <input type="date" id="filterLastTo" class="form-control" placeholder="Last contacted to">
              </div>
            </div>
            <table class="table table-sm" id="recipientsTable">
              <thead>
                <tr>
                  <th><input type="checkbox" id="selectAll"></th>
                  <th>Type</th>
                  <th>Status</th>
                  <th>Name</th>
                  <th>Email</th>
                  <th>Course</th>
                  <th>Program</th>
                  <th>Signed Up</th>
                  <th id="thLastContacted" style="cursor:pointer;" title="Sort by Last Contacted">Last Contacted ▾</th>
                </tr>
              </thead>
              <tbody id="recipientsBody">
                   <% students.forEach(function(s){
                   const full = s.name || (s.profile?.firstName + ' ' + s.profile?.lastName);
                   const course = s.profile?.course || 'N/A';
                   const aff = s.profile?.affiliateProgram || 'N/A';
                   const signupDate = s.appliedAt ? new Date(s.appliedAt) : null;
                   const signup = signupDate && !isNaN(signupDate) ? signupDate.toISOString().slice(0,10) : 'N/A';
                   const status = s.status === 'approved' ? 'Enrolled' : (s.status === 'declined' ? 'Denied' : 'Pending');
              %>
                  <tr data-type="student" data-course="<%= course %>" data-program="<%= aff %>" data-status="<%= status %>" data-lastcontacted="<%= s.lastContacted || '' %>">
                    <td><input type="checkbox" name="recipients" value="student-<%= s.id %>"></td>
                    <td>Student</td>
                    <td><%= status %></td>
                    <td><%= full %></td>
                    <td><%= s.email %></td>
                    <td><%= course %></td>
                    <td><%= aff %></td>
                    <td><%= signup %></td>
                    <td class="last-contacted" data-ts="<%= s.lastContacted || '' %>"></td>
                  </tr>
                <% }); %>
                <% preregs.forEach(function(p){ %>
                  <tr data-type="pre" data-course="<%= p.course || '' %>" data-program="" data-status="Pre-registered" data-lastcontacted="<%= p.lastContacted || '' %>">
                    <td><input type="checkbox" name="recipients" value="pre-<%= p.id %>"></td>
                    <td>Pre-registered</td>
                    <td>Pre-registered</td>
                    <td><%= p.name %></td>
                    <td><%= p.email %></td>
                    <td><%= p.course || '' %></td>
                    <td></td>
                    <td></td>
                    <td class="last-contacted" data-ts="<%= p.lastContacted || '' %>"></td>
                  </tr>
                <% }); %>
                <% rsvps.forEach(function(r){ %>
                  <tr data-type="rsvp" data-course="" data-program="" data-status="RSVP" data-lastcontacted="">
                    <td><input type="checkbox" name="recipients" value="rsvp-<%= r.id %>"></td>
                    <td>RSVP</td>
                    <td>RSVP</td>
                    <td><%= r.fullName %></td>
                    <td><%= r.email %></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td class="last-contacted" data-ts=""></td>
                  </tr>
                <% }); %>
              </tbody>
            </table>
          </div>
        <div class="mb-3">
          <label class="form-label">Email Type</label>
          <select name="type" class="form-select">
            <option value="recruitment">Recruitment</option>
            <option value="retention">Retention</option>
            <option value="approval">Approval</option>
            <option value="events">Events</option>
            <option value="information">Information</option>
          </select>
        </div>
        <div class="mb-3">
          <label class="form-label">Subject</label>
          <input type="text" name="subject" class="form-control">
        </div>
        <div class="mb-3">
          <label class="form-label">Image</label>
          <input type="file" name="image" class="form-control" accept="image/*">
        </div>
        <div class="mb-3">
          <label class="form-label">Message</label>
          <textarea name="message" class="form-control" rows="6"></textarea>
        </div>
        <h5 class="mt-3">Preview</h5>
        <div id="preview" class="mt-1" style="display:none;"></div>
        <button type="submit" class="btn btn-primary">Send Email</button>
      </form>
    </div>
  </div>
  <script>
    const prefaces = {
      recruitment: '',
      retention: '',
      approval: '',
      events: '',
      information: ''
    };
    const templates = <%- JSON.stringify(templates) %>;
    const typeSelect = document.querySelector('select[name="type"]');
    const messageBox = document.querySelector('textarea[name="message"]');
    const subjectInput = document.querySelector('input[name="subject"]');
    const imageInput = document.querySelector('input[name="image"]');
    const previewDiv = document.getElementById('preview');
    const searchInput = document.getElementById('searchRecipients');
    const filterType = document.getElementById('filterType');
    const filterCourse = document.getElementById('filterCourse');
    const filterProgram = document.getElementById('filterProgram');
    const selectAll = document.getElementById('selectAll');
    let touched = false;
    messageBox.addEventListener('input', () => { touched = true; fetchPreview(); });
    imageInput.addEventListener('change', fetchPreview);

    function updatePreface() {
      if (touched && messageBox.value.trim()) return;
      const pre = prefaces[typeSelect.value] || '';
      messageBox.value = pre;
    }

    function updateSubject() {
      subjectInput.value = templates[typeSelect.value]?.subject || '';
    }

    async function fetchPreview() {
      const body = new FormData();
      body.append('type', typeSelect.value);
      body.append('message', messageBox.value);
      body.append('subject', subjectInput.value);
      if (imageInput.files[0]) body.append('image', imageInput.files[0]);
      const res = await fetch('/admin/marketing/preview', {
        method: 'POST',
        body
      });
      const data = await res.json();
      if (data.html) {
        previewDiv.style.display = 'block';
        previewDiv.innerHTML = data.html;
      }
    }

    function applyFilters() {
      selectAll.checked = false;
      const search = searchInput.value.toLowerCase();
      const typeVal = filterType.value;
      const courseVal = filterCourse.value.toLowerCase();
      const programVal = filterProgram.value.toLowerCase();
      const lastFrom = document.getElementById('filterLastFrom').value;
      const lastTo = document.getElementById('filterLastTo').value;
      const fromTs = lastFrom ? new Date(lastFrom + 'T00:00:00').getTime() : null;
      const toTs = lastTo ? new Date(lastTo + 'T23:59:59').getTime() : null;
      document.querySelectorAll('#recipientsBody tr').forEach(tr => {
        const text = tr.innerText.toLowerCase();
        const type = tr.dataset.type;
        const course = (tr.dataset.course || '').toLowerCase();
        const program = (tr.dataset.program || '').toLowerCase();
        const last = tr.dataset.lastcontacted || '';
        const lastTs = last ? Date.parse(last) : NaN;
        const matchesSearch = text.includes(search);
        const matchesType = !typeVal || type === typeVal;
        const matchesCourse = !courseVal || course === courseVal;
        const matchesProgram = !programVal || program === programVal;
        let matchesLast = true;
        if (fromTs || toTs) {
          if (!last || isNaN(lastTs)) {
            matchesLast = false;
          } else {
            if (fromTs && lastTs < fromTs) matchesLast = false;
            if (toTs && lastTs > toTs) matchesLast = false;
          }
        }
        tr.style.display = (matchesSearch && matchesType && matchesCourse && matchesProgram && matchesLast) ? '' : 'none';
      });
    }

    searchInput.addEventListener('input', applyFilters);
    filterType.addEventListener('change', applyFilters);
    filterCourse.addEventListener('change', applyFilters);
    filterProgram.addEventListener('change', applyFilters);
    document.getElementById('filterLastFrom').addEventListener('change', applyFilters);
    document.getElementById('filterLastTo').addEventListener('change', applyFilters);

    selectAll.addEventListener('change', (e) => {
      document.querySelectorAll('#recipientsBody tr').forEach(tr => {
        if (tr.style.display !== 'none') {
          const cb = tr.querySelector('input[type="checkbox"]');
          cb.checked = e.target.checked;
        }
      });
    });

    document.querySelectorAll('#recipientsBody input[type="checkbox"]').forEach(cb => {
      cb.addEventListener('change', () => {
        if (!cb.checked) selectAll.checked = false;
      });
    });

    typeSelect.addEventListener('change', () => {
      touched = false;
      updatePreface();
      updateSubject();
      fetchPreview();
    });

    document.addEventListener('DOMContentLoaded', () => {
      updatePreface();
      updateSubject();
      fetchPreview();
      applyFilters();
      renderLastContactedPills();
    });
  </script>
  <script>
    function renderLastContactedPills(){
      const cells = document.querySelectorAll('#recipientsBody td.last-contacted');
      const now = Date.now();
      const twoWeeksMs = 14 * 24 * 60 * 60 * 1000;
      cells.forEach(td => {
        const ts = td.getAttribute('data-ts') || '';
        if (!ts) {
          td.innerHTML = '<span class="pill pill-red">Never</span>';
          return;
        }
        const t = Date.parse(ts);
        if (isNaN(t)) {
          td.textContent = '';
          return;
        }
        const diff = now - t;
        const dateStr = new Date(t).toLocaleString();
        if (diff < twoWeeksMs) {
          td.innerHTML = `<span class="pill pill-blue" title="${dateStr}">${dateStr}</span>`;
        } else {
          td.innerHTML = `<span class="pill pill-yellow" title="${dateStr}">${dateStr}</span>`;
        }
      });
    }
  </script>
  <script>
    // Sorting by Last Contacted
    (function(){
      const th = document.getElementById('thLastContacted');
      if (!th) return;
      let desc = true;
      th.addEventListener('click', () => {
        const tbody = document.getElementById('recipientsBody');
        const rows = Array.from(tbody.querySelectorAll('tr'));
        rows.sort((a, b) => {
          const va = a.dataset.lastcontacted || '';
          const vb = b.dataset.lastcontacted || '';
          const ta = va ? Date.parse(va) : 0;
          const tb = vb ? Date.parse(vb) : 0;
          return desc ? tb - ta : ta - tb;
        });
        rows.forEach(r => tbody.appendChild(r));
        desc = !desc;
        th.textContent = 'Last Contacted ' + (desc ? '▾' : '▴');
      });
    })();
  </script>
</body>
</html>
