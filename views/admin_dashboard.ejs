<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <title>Admin Dashboard â€“ MD Technical School</title>
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <link rel="icon" href="<%= branding?.favicon %>">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" />

  <style>
    :root{
      --primary-color: dodgerblue;
      --secondary-color: orange;
      --bg: #f4f6f9;
      --surface: #ffffff;
      --border: #e5e7eb;
      --muted: #6b7280;
      --focus: rgba(30,144,255,.35);
    }
    * { box-sizing: border-box; }
    body{
      margin:0; background: var(--bg);
      font-family: "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif;
      color:#111827;
    }

    /* Hero */
    .hero{
      background:
        linear-gradient(180deg, rgba(30,144,255,.10), rgba(255,165,0,.06));
      border-bottom: 1px solid var(--border);
      padding: 1.25rem 0;
      margin-bottom: 1rem;
    }
    .hero h2{ margin:0; font-weight:800; font-size: clamp(1.1rem, 2.4vw, 1.5rem); }
    .hero .sub{ color: var(--muted); }

    /* Stat cards */
    .stat-card{
      background: var(--surface);
      border:1px solid var(--border);
      border-radius:14px;
      padding:1rem 1.25rem;
      box-shadow: 0 .6rem 1.2rem rgba(0,0,0,.06);
      height:100%;
    }
    .stat-value{ font-size: clamp(1.5rem, 3.5vw, 2.25rem); font-weight:800; line-height:1; }
    .stat-label{ color: var(--muted); margin-top:.35rem; }

    /* Quick actions */
    .qa{
      background: var(--surface);
      border:1px solid var(--border);
      border-radius:14px;
      box-shadow: 0 .6rem 1.2rem rgba(0,0,0,.05);
      padding:1rem;
    }
    .qa-title{
      display:flex; align-items:center; gap:10px; font-weight:800; margin-bottom:.75rem;
    }
    .qa-title::before{
      content:""; width:6px; height:18px; border-radius:3px; background: var(--secondary-color);
    }

    /* Action grid (mobile-first) */
    .action-grid{
      display:grid;
      grid-template-columns: 1fr 1fr;
      gap:.5rem;
    }
    @media (min-width: 576px){
      .action-grid{ grid-template-columns: repeat(3, 1fr); }
    }
    @media (min-width: 992px){
      .action-grid{ grid-template-columns: repeat(4, 1fr); }
    }
    .action-grid .btn{ width:100%; }

    /* Themed buttons */
    .btn-primary{ background: var(--primary-color) !important; border-color: var(--primary-color) !important; }
    .btn-primary:hover{ background:#1e6edb !important; border-color:#1e6edb !important; }
    .btn-outline-primary{ color: var(--primary-color) !important; border-color: var(--primary-color) !important; }
    .btn-outline-primary:hover{ background: var(--primary-color) !important; color:#fff !important; }
    .btn-link{ color: var(--primary-color) !important; }
    .btn-link:hover{ color: var(--secondary-color) !important; }

    /* Focus styles */
    .form-control:focus, .btn:focus{
      box-shadow: 0 0 0 .25rem var(--focus) !important;
      outline: none !important;
    }

    /* Reduce motion */
    @media (prefers-reduced-motion: reduce){
      *{ animation:none !important; transition:none !important; }
    }
     .chart-card{
      background: var(--surface);
      border:1px solid var(--border);
      border-radius:14px;
      padding:.5rem;
      box-shadow: 0 .6rem 1.2rem rgba(0,0,0,.06);
      height:250px;
    }
  </style>
</head>
<body>
  <%- include('header', { user: user }) %>

  <!-- Hero -->
  <div class="hero">
    <div class="container d-flex flex-wrap justify-content-between align-items-end gap-2">
      <div>
        <h2>Admin Dashboard</h2>
        <div class="sub">Welcome, <strong><%= user.name %></strong>.</div>
      </div>
    </div>
  </div>

  <div class="container pb-4">
    <!-- Stats -->
    <div class="row g-3 mb-4">
      <div class="col-12 col-sm-6 col-lg-4">
        <div class="stat-card" role="region" aria-label="Classes count">
          <div class="stat-value"><%= classes.length %></div>
          <div class="stat-label">Classes</div>
        </div>
      </div>
      <div class="col-12 col-sm-6 col-lg-4">
        <div class="stat-card" role="region" aria-label="Teachers count">
          <div class="stat-value"><%= teachers.length %></div>
          <div class="stat-label">Teachers</div>
        </div>
      </div>
      <div class="col-12 col-sm-6 col-lg-4">
        <div class="stat-card" role="region" aria-label="Students count">
          <div class="stat-value"><%= students.length %></div>
          <div class="stat-label">Students</div>
        </div>
      </div>
    </div>

    <!-- Quick Actions -->
    <section class="qa">
      <div class="qa-title">Quick Actions</div>
      <div class="action-grid">
        <!-- Students -->
        <a class="btn btn-primary" href="/admin/students/pending">Pending Students</a>
        <a class="btn btn-outline-primary" href="/admin/students">Accepted Students</a>
        <a class="btn btn-outline-danger" href="/admin/denied">Denied Students</a>
          <a class="btn btn-outline-secondary" href="/admin/pre-registrations">Pre-Registered Users</a>

        <!-- Classes -->
        <a class="btn btn-outline-primary" href="/admin/classes">All Classes</a>
        <a class="btn btn-success" href="/admin/classes/new">Create Class</a>

        <!-- Teachers -->
        <a class="btn btn-warning" href="/admin/teachers/new">Create Teacher</a>
        <a class="btn btn-warning" href="/admin/teachers">Teacher List</a>

        <!-- Reports / Events -->
        <a class="btn btn-outline-secondary" href="/admin/reports">Reports</a>
        <a class="btn btn-outline-secondary" href="/admin/events">Events Dashboard</a>
                <a class="btn btn-info" href="/admin/marketing">Marketing</a>
    <a class="btn btn-outline-secondary" href="/admin/create-event">Create Event</a>
        <a class="btn btn-outline-secondary" href="/admin/event-rsvps">Event RSVPs</a>
      </div>
    </section>
      <!-- Announcements -->
    <section class="qa mt-4">
      <div class="qa-title">Announcements</div>
      <form action="/admin/announcements" method="post" class="row g-2 mb-3">
        <div class="col-md-8">
          <input name="message" class="form-control" placeholder="New announcement" required>
        </div>
        <div class="col-md-3">
          <select name="audience" class="form-select">
            <option value="all">Everyone</option>
            <option value="teachers">Teachers</option>
            <option value="students">Students</option>
          </select>
        </div>
        <div class="col-md-1">
          <button class="btn btn-primary w-100" type="submit">Post</button>
        </div>
      </form>
      <ul class="list-group">
        <% if ((announcements || []).length) { %>
          <% announcements.forEach(a => { %>
            <li class="list-group-item d-flex justify-content-between align-items-center">
              <span><%= a.message %></span>
              <small class="text-muted"><%= a.createdAt %></small>
            </li>
          <% }) %>
        <% } else { %>
          <li class="list-group-item text-muted">No announcements yet.</li>
        <% } %>
      </ul>
    </section>
    
 <!-- Charts -->
    <div class="row g-3 mt-4">
      <div class="col-12 col-md-6">
        <div id="chart-student-status" class="chart-card"></div>
      </div>
      <div class="col-12 col-md-6">
        <div id="chart-class-size" class="chart-card"></div>
      </div>
      <div class="col-12 col-md-6">
        <div id="chart-pending" class="chart-card"></div>
      </div>
      <div class="col-12 col-md-6">
        <div id="chart-approved" class="chart-card"></div>
      </div>
    </div>
  </div>

  <script src="https://cdn.amcharts.com/lib/5/index.js"></script>
  <script src="https://cdn.amcharts.com/lib/5/xy.js"></script>
  <script src="https://cdn.amcharts.com/lib/5/percent.js"></script>
  <script src="https://cdn.amcharts.com/lib/5/themes/Animated.js"></script>
  <script>
    am5.ready(function() {
      var root = am5.Root.new("chart-student-status");
      root.setThemes([am5themes_Animated.new(root)]);
      var chart = root.container.children.push(am5percent.PieChart.new(root, {}));
      var series = chart.series.push(am5percent.PieSeries.new(root, {
        valueField: "value",
        categoryField: "category"
      }));
      series.data.setAll([
        { category: "Approved", value: <%= approvedCount %> },
        { category: "Pending", value: <%= pendingCount %> }
      ]);

      var root2 = am5.Root.new("chart-class-size");
      root2.setThemes([am5themes_Animated.new(root2)]);
      var chart2 = root2.container.children.push(am5xy.XYChart.new(root2, { paddingLeft:0, paddingRight:0 }));
      var xAxis = chart2.xAxes.push(am5xy.CategoryAxis.new(root2, { categoryField: "class", renderer: am5xy.AxisRendererX.new(root2, {}) }));
      var yAxis = chart2.yAxes.push(am5xy.ValueAxis.new(root2, { min:0 }));
      var series2 = chart2.series.push(am5xy.ColumnSeries.new(root2, { xAxis: xAxis, yAxis: yAxis, valueYField: "size", categoryXField: "class" }));
      var classData = <%- JSON.stringify(classSizes.map(c => ({ class: c.name, size: c.size }))) %>;
      xAxis.data.setAll(classData);
      series2.data.setAll(classData);

      var root3 = am5.Root.new("chart-pending");
      root3.setThemes([am5themes_Animated.new(root3)]);
      var chart3 = root3.container.children.push(am5xy.XYChart.new(root3, {}));
      var xAxis3 = chart3.xAxes.push(am5xy.CategoryAxis.new(root3, { categoryField: "category" }));
      var yAxis3 = chart3.yAxes.push(am5xy.ValueAxis.new(root3, { min:0 }));
      var series3 = chart3.series.push(am5xy.ColumnSeries.new(root3, { xAxis: xAxis3, yAxis: yAxis3, valueYField: "value", categoryXField: "category" }));
      var pendingData = [{ category: "Pending", value: <%= pendingCount %> }];
      xAxis3.data.setAll(pendingData);
      series3.data.setAll(pendingData);

      var root4 = am5.Root.new("chart-approved");
      root4.setThemes([am5themes_Animated.new(root4)]);
      var chart4 = root4.container.children.push(am5xy.XYChart.new(root4, {}));
      var xAxis4 = chart4.xAxes.push(am5xy.CategoryAxis.new(root4, { categoryField: "category" }));
      var yAxis4 = chart4.yAxes.push(am5xy.ValueAxis.new(root4, { min:0 }));
      var series4 = chart4.series.push(am5xy.ColumnSeries.new(root4, { xAxis: xAxis4, yAxis: yAxis4, valueYField: "value", categoryXField: "category" }));
      var approvedData = [{ category: "Approved", value: <%= approvedCount %> }];
      xAxis4.data.setAll(approvedData);
      series4.data.setAll(approvedData);
    });
  </script>
  </body>
</html>
