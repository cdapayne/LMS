<!DOCTYPE html>
<html lang="en" data-bs-theme="light">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width,initial-scale=1" />
  <title>Pre-Register â€“ MD Technical School</title>
  <link rel="icon" href="<%= branding.favicon %>" />
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" />
  <link rel="stylesheet" href="/css/theme.css" />
  <style>
    :root { --card-radius: 1rem; }
    body{
      background: var(--bs-body-bg);
      min-height: 100svh;
      display: grid;
      place-items: center;
      padding: 1.25rem;
    }
    .form-wrap{ width: min(920px, 100%); }
    .form-card{
      background: var(--bs-body-bg);
      border: 1px solid var(--bs-border-color);
      border-radius: var(--card-radius);
      box-shadow: 0 10px 30px rgba(0,0,0,.06);
      overflow: hidden;
    }
    .form-head{
      display:flex; align-items:center; gap:.75rem;
      padding:1.25rem 1.25rem .75rem;
      border-bottom:1px solid var(--bs-border-color);
    }
    .form-head img{ width:40px; height:40px; object-fit:contain; }
    .form-title{ font-size:clamp(1.1rem,2.5vw,1.35rem); margin:0; }
    .form-body{ padding:1.25rem; }
    .req::after{ content:" *"; color:var(--bs-danger); }
    .help{ color:var(--bs-secondary-color); }
    .btn-primary .spinner-border,
    .btn-outline-secondary .spinner-border{ width:1rem; height:1rem; }
    .consent-box{ max-height:8rem; overflow:auto; border:1px dashed var(--bs-border-color);
                  padding:.75rem; border-radius:.5rem; background:var(--bs-tertiary-bg); }

    /* Celebration view */
    .celebrate{
      position: relative;
      min-height: 60vh;
      display: grid;
      place-items: center;
      text-align: center;
      padding: 2rem;
    }
    .celebrate-card{
      background: var(--bs-body-bg);
      border: 1px solid var(--bs-border-color);
      border-radius: 1rem;
      box-shadow: 0 10px 30px rgba(0,0,0,.08);
      padding: 2rem 1.5rem;
      max-width: 560px;
      width: 100%;
    }
    .celebrate h2{ font-size: clamp(1.25rem, 2.8vw, 1.75rem); }
    .celebrate .lead{ color: var(--bs-secondary-color); }
  </style>
</head>
<body>


  <main class="form-wrap">
    <section class="form-card">
      <header class="form-head">
        <img src="<%= branding.primaryLogo %>" alt="MD Technical School logo" />
        <h1 class="form-title">Pre-Registration</h1>
      </header>

      <div class="form-body">
        <% if (success) { %>
          <!-- Celebration view -->
          <div class="celebrate">
            <div class="celebrate-card">
              <div class="display-6 mb-2">ðŸŽ‰ You're on the list!</div>
              <p class="lead mb-3">Weâ€™re opening your course curriculumâ€¦</p>
              <div class="small mb-3">Redirecting in <span id="countdown">10</span> seconds.</div>
              <a id="openCurriculum" class="btn btn-primary w-100 mb-2" href="/docs/MD Tech School Catalog Official New 2025.pdf">
                Open Curriculum PDF
              </a>
              <a id="goRegister" class="btn btn-outline-secondary w-100" href="/register">
                Fully Register Now
              </a>
            </div>
          </div>

          <!-- Confetti only on success -->
          <script src="https://cdn.jsdelivr.net/npm/canvas-confetti@1.9.3/dist/confetti.browser.min.js"></script>
          <script>
            (function(){
              const pdfUrl = '/docs/MD Tech School Catalog Official New 2025.pdf';
              const prefersReduced = window.matchMedia?.('(prefers-reduced-motion: reduce)').matches;

              function fire(particleRatio, opts) {
                if (!window.confetti) return;
                confetti(Object.assign({
                  origin: { y: 0.2 },
                  spread: 70,
                  startVelocity: 45,
                  ticks: 200
                }, opts, { particleCount: Math.floor(400 * particleRatio) }));
              }

              if (!prefersReduced && window.confetti) {
                fire(0.25, { spread: 26, startVelocity: 55 });
                fire(0.20, { spread: 60 });
                fire(0.35, { spread: 100, decay: 0.92, scalar: 0.9 });
                fire(0.10, { spread: 120, startVelocity: 25, decay: 0.92 });
                setTimeout(()=>fire(0.25, { spread: 90, scalar: 1.2 }), 350);
              }

              // Countdown + redirect
              let secs = 10;
              const cd = document.getElementById('countdown');
              const iv = setInterval(() => {
                secs -= 1; if (cd) cd.textContent = String(secs);
                if (secs <= 0) { clearInterval(iv); window.location.assign(pdfUrl); }
              }, 1000);
            })();
          </script>
        <% } else { %>
          <% if (error) { %>
            <div class="alert alert-danger" role="alert"><%= error %></div>
          <% } %>

          <form method="post" action="/pre-register" class="needs-validation" novalidate>
            <div class="row g-3">
              <div class="col-12 col-md-6">
                <label class="form-label req" for="name">Full Name</label>
                <input id="name" name="name" class="form-control" required
                  autocomplete="name" value="<%= formData.name || '' %>"/>
                <div class="invalid-feedback">Your full name is required.</div>
              </div>

              <div class="col-12 col-md-6">
                <label class="form-label req" for="email">Email</label>
                <input id="email" type="email" name="email" class="form-control" required
                  autocomplete="email" inputmode="email" value="<%= formData.email || '' %>"/>
                <div class="invalid-feedback">Enter a valid email.</div>
              </div>

              <div class="col-12 col-md-6">
                <label class="form-label req" for="phone">Phone Number</label>
                <input id="phone" name="phone" class="form-control" required
                  autocomplete="tel" inputmode="tel"
                  pattern="^[0-9\\-\\+\\(\\)\\s\\.]{7,}$"
                  value="<%= formData.phone || '' %>"/>
                <div class="help small">Formats like 555-555-5555 are accepted.</div>
                <div class="invalid-feedback">Enter a valid phone number.</div>
              </div>

              <div class="col-12 col-md-6">
                <label class="form-label" for="phoneCarrier">Phone Carrier (optional)</label>
                <input id="phoneCarrier" name="phoneCarrier" class="form-control"
                  autocomplete="off" value="<%= formData.phoneCarrier || '' %>"/>
              </div>

              <div class="col-12">
                <label class="form-label" for="address">Address (optional)</label>
                <input id="address" name="address" class="form-control"
                  autocomplete="address-line1" value="<%= formData.address || '' %>"/>
              </div>

              <div class="col-6 col-md-4">
                <label class="form-label req" for="zip">Zip Code</label>
                <input id="zip" name="zip" class="form-control" required
                  inputmode="numeric" autocomplete="postal-code" value="<%= formData.zip || '' %>"/>
                <div class="invalid-feedback">Enter a valid ZIP code.</div>
              </div>

              <div class="col-6 col-md-4">
                <label class="form-label req" for="state">State</label>
                <input id="state" name="state" class="form-control" required
                  maxlength="2" placeholder="VA" autocomplete="address-level1"
                  value="<%= formData.state || '' %>"/>
                <div class="invalid-feedback">State (e.g., VA) is required.</div>
              </div>

              <div class="col-12">
                <label class="form-label req d-block">Are you serving?</label>
                <div class="d-flex gap-3">
                  <div class="form-check">
                    <input class="form-check-input" type="radio" name="serving" id="servingYes"
                      value="yes" <%= formData.serving === 'yes' ? 'checked' : '' %> required />
                    <label class="form-check-label" for="servingYes">Yes</label>
                  </div>
                  <div class="form-check">
                    <input class="form-check-input" type="radio" name="serving" id="servingNo"
                      value="no" <%= formData.serving === 'no' ? 'checked' : '' %> required />
                    <label class="form-check-label" for="servingNo">No</label>
                  </div>
                </div>
                <div class="invalid-feedback d-block">Please select one.</div>
              </div>

              <div class="col-12" id="branchGroup" style="<%= formData.serving === 'yes' ? '' : 'display:none;' %>">
                <label class="form-label req" for="branchInput">Branch of Service</label>
                <input name="branch" id="branchInput" class="form-control"
                  <%= formData.serving === 'yes' ? 'required' : '' %>
                  value="<%= formData.branch || '' %>" />
                <div class="invalid-feedback">Branch is required when serving.</div>
              </div>

              <div class="col-12 col-md-6">
                <label class="form-label req" for="course">Course</label>
                <select id="course" name="course" class="form-select" required>
                  <option value="">Select a course</option>
                  <% const courseOptions = [
                    "Jr Network Engineer","Helpdesk","CCNA","RMF","ITIL 4 Foundations","CEH",
                    "CND","Security+","CASP+","CHFI","Internship","Other"
                  ]; %>
                  <% for (const opt of courseOptions) { %>
                    <option value="<%= opt %>" <%= formData.course === opt ? 'selected' : '' %>><%= opt %></option>
                  <% } %>
                </select>
                <div class="invalid-feedback">Please choose a course.</div>
              </div>

              <div class="col-12 col-md-6">
                <label class="form-label req" for="applicantType">Applicant Type</label>
                <select id="applicantType" name="applicantType" class="form-select" required>
                  <option value="">Select applicant type</option>
                  <% const applicantOptions = [
                    "Airforce","Army","College Student","Coastguard","DARS","Corporation",
                    "MYCAA","Navy","Other","Post 911","Self Pay","VR&E","WIOA","WIOA Veteran"
                  ]; %>
                  <% for (const opt of applicantOptions) { %>
                    <option value="<%= opt %>" <%= formData.applicantType === opt ? 'selected' : '' %>><%= opt %></option>
                  <% } %>
                </select>
                <div class="invalid-feedback">Please choose an applicant type.</div>
              </div>

              <div class="col-12 col-md-6">
                <label class="form-label" for="referral">How did you hear about us? (optional)</label>
                <input id="referral" name="referral" class="form-control"
                  value="<%= formData.referral || '' %>" />
              </div>

              <div class="col-12 col-md-6">
                <label class="form-label" for="referralEmail">Referral Email (optional)</label>
                <input id="referralEmail" type="email" name="referralEmail" class="form-control"
                  inputmode="email" value="<%= formData.referralEmail || '' %>" />
              </div>

              <div class="col-12">
                <div class="form-check mb-2">
                  <input class="form-check-input" type="checkbox" name="consent" id="consent"
                    <%= formData.consent ? 'checked' : '' %> required />
                  <label class="form-check-label" for="consent">
                    I consent to receive Marketing and Promotional texts from MD Technical Schools (up to 4 SMS/month). Reply HELP for info, STOP to opt out. Message & data rates may apply.
                  </label>
                  <div class="invalid-feedback">Consent is required.</div>
                </div>
              </div>
            </div>

            <!-- Actions -->
            <div class="d-grid d-md-flex gap-2 mt-4">
              <button id="btnQuick" class="btn btn-outline-secondary flex-fill" name="action" value="quick" type="submit">
                <span class="label">Quick Sign Up</span>
                <span class="spinner-border spinner-border-sm ms-2 d-none" aria-hidden="true"></span>
              </button>
              <button id="btnEnroll" class="btn btn-primary flex-fill" name="action" value="enroll" type="submit">
                <span class="label">Sign Up &amp; Enroll</span>
                <span class="spinner-border spinner-border-sm ms-2 d-none" aria-hidden="true"></span>
              </button>
            </div>

            <!-- Honeypot -->
            <div class="visually-hidden" aria-hidden="true">
              <label for="website">Website</label>
              <input id="website" name="website" tabindex="-1" autocomplete="off" />
            </div>
          </form>
        <% } %>
      </div>
    </section>
  </main>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" defer></script>
  <script src="/js/theme.js"></script>
  <script>
    // Theme toggle
    setupThemeToggle('themeToggle');

    <% if (!success) { %>
    // Show/hide branch field based on serving choice
    function toggleBranch(){
      const yes = document.getElementById('servingYes')?.checked;
      const grp = document.getElementById('branchGroup');
      const inp = document.getElementById('branchInput');
      if(!grp || !inp) return;
      grp.style.display = yes ? '' : 'none';
      if (yes) inp.setAttribute('required','required'); else inp.removeAttribute('required');
    }
    document.querySelectorAll('input[name="serving"]').forEach(function(r){ r.addEventListener('change', toggleBranch); });
    toggleBranch();

    // Bootstrap validation + submit UX
    (function () {
      const form = document.querySelector('.needs-validation');
      const btnQuick = document.getElementById('btnQuick');
      const btnEnroll = document.getElementById('btnEnroll');
      const setBusy = (btn, busy) => {
        if (!btn) return;
        btn.querySelector('.spinner-border')?.classList.toggle('d-none', !busy);
        btn.toggleAttribute('disabled', busy);
        (busy ? (btn === btnQuick ? btnEnroll : btnQuick) : null)?.removeAttribute('disabled');
      };
      form?.addEventListener('submit', (e) => {
        const trap = document.getElementById('website');
        if (trap && trap.value) { e.preventDefault(); return; }

        if (!form.checkValidity()) {
          e.preventDefault();
          e.stopPropagation();
          form.classList.add('was-validated');
          return;
        }
        const submitter = e.submitter;
        setBusy(submitter, true);
      });
    })();
    <% } %>
  </script>
</body>
</html>
